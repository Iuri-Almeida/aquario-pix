spring.application.name=bacen-service

server.port=8082

# datasource
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:bacen
spring.datasource.username=sa
spring.datasource.password=

# jpa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
org.hibernate.jpa.HibernatePersistenceProvider

# KAFKA
##Cadastro de chaves do Itau
spring.kafka.consumer.cadastro-chavePix-itau.group-id=itau-cadastro-chavepix
topic.cadastro-chavePix-itau.consumer.name = itau-cadastro-chavepix-solicitacao
topic.producer-cadastro-chavePix-atau.name = confirmacao-cadastro-chavepix-itau

##Cadastro de chaves da Ada
spring.kafka.consumer.cadastro-chavePix-ada.group-id=ada-cadastro-chavepix
topic.consumer-cadastro-chavePix-ada.name = ada-cadastro-chavepix-solicitacao
topic.producer-cadastro-chavePix-ada.name = confirmacao-cadastro-chavepix-ada

##Envio de pix pelo Itau
spring.kafka.consumer.pixSolicitacao-itau.group-id=itau-solicitacaoPix
topic.consumer.itauPixSolicitacao.name = itau-pix-solicitacao
topic.producer.pixConfirmacaoItau.name = confirmacao-pix-itau

##Envio de pix para o Itau
spring.kafka.consumer.pixConfirmacao-itau.group-id=itau-confimacaoPix
topic.producer.pixSolicitacaoItau.name = pix-solicitacao-itau
topic.consumer.itauPixConfirmacao.name = itau-pix-confirmacao

##Envio de pix pela Ada
spring.kafka.consumer.pixSolicitacao-ada.group-id=ada-solicitacaoPix
topic.consumer.adaPixSolicitacao.name = ada-pix-solicitacao
topic.producer.pixConfirmacaoAda.name = pix-confirmacao-ada

##Envio de pix para a Ada
spring.kafka.consumer.pixConfirmacao-ada.group-id=ada-confirmacaoPix
topic.producer.pixSolicitacaoAda.name = pix-solicitacao-ada
topic.consumer.adaPixConfirmacao.name = ada-pix-confirmacao


spring.kafka.listener.ack-mode=MANUAL
#
#spring.kafka.bootstrap-servers=broker1:29092
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.trusted.packages=*
#
#management.endpoints.web.exposure.include=*
#
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone=http://pix-eureka:8761/eureka/
#
#eureka.instance.hostname=pix-bacen
